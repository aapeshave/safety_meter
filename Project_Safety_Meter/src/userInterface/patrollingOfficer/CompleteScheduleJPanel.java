/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.patrollingOfficer;

import business.schedule.Schedule;
import business.schedule.TimeInterval;
import business.userAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajinkya
 */
public class CompleteScheduleJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Schedule patrollingSchedule;
    private UserAccount userAccount;
    /** 
     * Creates new form CompleteScheduleJPanel
     */
    public CompleteScheduleJPanel(JPanel userProcessContainer,UserAccount user, Schedule schedule) {
        initComponents();
        this.userAccount = user;
        this.userProcessContainer = userProcessContainer;
        patrollingSchedule = schedule;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patrollingScheduleJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        completeJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 254, 242));

        patrollingScheduleJTable.setBackground(new java.awt.Color(237, 238, 225));
        patrollingScheduleJTable.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        patrollingScheduleJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Schedule ID", "Officer", "Start Time", "End Time", "Finsihed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patrollingScheduleJTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Your Schedule");

        backJButton.setBackground(new java.awt.Color(237, 238, 225));
        backJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        completeJButton.setBackground(new java.awt.Color(237, 238, 225));
        completeJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        completeJButton.setText("Mark as Complete");
        completeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(completeJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton)
                    .addComponent(completeJButton))
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void completeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeJButtonActionPerformed
       int selectedSchedule = patrollingScheduleJTable.getSelectedRow();
       
        if(selectedSchedule>=0){
            TimeInterval newInterval = (TimeInterval) patrollingScheduleJTable.getValueAt(selectedSchedule, 0);
            newInterval.setDoneShift(1);
            JOptionPane.showMessageDialog(patrollingScheduleJTable, "Congratulations for Completing your Shift.");
            populateTable();
        }
        else{
            JOptionPane.showMessageDialog(patrollingScheduleJTable, "Please select a row from table");
        }
    }//GEN-LAST:event_completeJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton completeJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patrollingScheduleJTable;
    // End of variables declaration//GEN-END:variables
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) patrollingScheduleJTable.getModel();
        model.setRowCount(0);
        
        for(Integer scheduleKeys : patrollingSchedule.getPatrollingSchedule().keySet()){
            TimeInterval interval = patrollingSchedule.getPatrollingSchedule().get(scheduleKeys);
            if(!(interval.getPatrollingOfficer() == null) && interval.getPatrollingOfficer().getUsername().equals(userAccount.getUsername())){
               Object[] row = new Object[5];
               row[0] = interval;
               if(interval.getPatrollingOfficer() == null){
                    row[1] = "Not Assigned";
                }
                else{
                    row[1] = interval.getPatrollingOfficer().getEmployee();
                }
                row[2] = interval.getStartTime();
                row[3] = interval.getEndTime();
                if(interval.getDoneShift()==0){
                    row[4] = "NO";
                }
                else
                    row[4] = "YES";
                model.addRow(row); 
            } 
        }
    }
}
