/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.receptionist;

import business.enterprise.Enterprise;
import business.organization.Organization;
import business.organization.RecordOrganization;
import business.person.Person;
import business.person.PersonDirectory;
import business.userAccount.UserAccount;
import business.workQueue.LicenseWorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ajinkya
 */
public class GetAppointmentJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private PersonDirectory personDirectory;
    private UserAccount user;
    private Enterprise enterprise;
    private Organization targetOrg;
    private UserAccount targetUser;
    private Person targetPerson;
    /**
     * Creates new form GetAppointmentJPanel
     * @param upc
     * @param personDirectory
     * @param user
     * @param enterprise
     */
    public GetAppointmentJPanel(JPanel upc, PersonDirectory personDirectory, UserAccount user, Enterprise enterprise) {
        initComponents();
        hideFields(false);
        userProcessContainer = upc;
        this.user = user;
        this.personDirectory = personDirectory;
        this.enterprise = enterprise;
        applyJButton.setVisible(false);
        employeeComboJLabel.setVisible(false);
        employeeJComboBox.setVisible(false);
    }
    
    public void hideFields(Boolean value){
        fNameJLabel.setVisible(value);
        lNameJLabel.setVisible(value);
        fnameJTextField.setVisible(value);
        lnameJTextField.setVisible(value);
        addressJLabel.setVisible(value);
        addressTextArea.setVisible(value);
        ssnJLabel.setVisible(value);
        ssnJTextField1.setVisible(value);
        birthDateJLabel.setVisible(value);
        birthdateTextField.setVisible(value);
        emailJLabel.setVisible(value);
        emailJTextField.setVisible(value);
        phoneJLabel.setVisible(value);
        wPhoneJTextField.setVisible(value);
        addDetailsJButton.setVisible(value);
        jScrollPane2.setVisible(value);
        salaryJTextField.setVisible(value);
        salaryJLabel.setVisible(value);
       
    }
    
    public void fillDetails(Person person){
        DateFormat format = new SimpleDateFormat("MM/DD/YYYY");
        fnameJTextField.setText(person.getFirstName());
        lnameJTextField.setText(person.getLastName());
        addressTextArea.setText(person.getAddress());
        ssnJTextField1.setText(person.getSSN());
        birthdateTextField.setText(format.format(person.getBirthdate()));
        wPhoneJTextField.setText(person.getPhoneNum());
        emailJTextField.setText(person.getEmail());
        salaryJTextField.setText(Integer.toString(person.getMonthlyIncome()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ssnJTextField = new javax.swing.JTextField();
        searchJButton = new javax.swing.JButton();
        fNameJLabel = new javax.swing.JLabel();
        fnameJTextField = new javax.swing.JTextField();
        lNameJLabel = new javax.swing.JLabel();
        lnameJTextField = new javax.swing.JTextField();
        ssnJLabel = new javax.swing.JLabel();
        ssnJTextField1 = new javax.swing.JTextField();
        emailJLabel = new javax.swing.JLabel();
        emailJTextField = new javax.swing.JTextField();
        phoneJLabel = new javax.swing.JLabel();
        wPhoneJTextField = new javax.swing.JTextField();
        birthDateJLabel = new javax.swing.JLabel();
        birthdateTextField = new javax.swing.JTextField();
        addressJLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        addDetailsJButton = new javax.swing.JButton();
        applyJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        employeeComboJLabel = new javax.swing.JLabel();
        employeeJComboBox = new javax.swing.JComboBox();
        salaryJLabel = new javax.swing.JLabel();
        salaryJTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 254, 242));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Get Appointment");

        jLabel2.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel2.setText("Enter SSN of Person");

        ssnJTextField.setBackground(new java.awt.Color(237, 238, 225));
        ssnJTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        searchJButton.setBackground(new java.awt.Color(237, 238, 225));
        searchJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        searchJButton.setText("Search");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        fNameJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        fNameJLabel.setText("First Name");

        fnameJTextField.setBackground(new java.awt.Color(237, 238, 225));
        fnameJTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        lNameJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        lNameJLabel.setText("Last Name");

        lnameJTextField.setBackground(new java.awt.Color(237, 238, 225));
        lnameJTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        ssnJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        ssnJLabel.setText("SSN");

        ssnJTextField1.setBackground(new java.awt.Color(237, 238, 225));
        ssnJTextField1.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        emailJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        emailJLabel.setText("Email");

        emailJTextField.setBackground(new java.awt.Color(237, 238, 225));
        emailJTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        phoneJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        phoneJLabel.setText("HomePhone");

        wPhoneJTextField.setBackground(new java.awt.Color(237, 238, 225));
        wPhoneJTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        wPhoneJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wPhoneJTextFieldActionPerformed(evt);
            }
        });

        birthDateJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        birthDateJLabel.setText("BirthDate");

        birthdateTextField.setBackground(new java.awt.Color(237, 238, 225));
        birthdateTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        addressJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        addressJLabel.setText("Address");

        addressTextArea.setBackground(new java.awt.Color(237, 238, 225));
        addressTextArea.setColumns(20);
        addressTextArea.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        addressTextArea.setRows(5);
        jScrollPane2.setViewportView(addressTextArea);

        addDetailsJButton.setBackground(new java.awt.Color(237, 238, 225));
        addDetailsJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        addDetailsJButton.setText("Add Details");
        addDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDetailsJButtonActionPerformed(evt);
            }
        });

        applyJButton.setBackground(new java.awt.Color(237, 238, 225));
        applyJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        applyJButton.setText("Apply for License");
        applyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(237, 238, 225));
        backJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        backJButton.setText("<- Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        employeeComboJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        employeeComboJLabel.setText("Select Employee");

        employeeJComboBox.setBackground(new java.awt.Color(237, 238, 225));
        employeeJComboBox.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        employeeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        salaryJLabel.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        salaryJLabel.setText("Salary ($)");

        salaryJTextField.setBackground(new java.awt.Color(237, 238, 225));
        salaryJTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        salaryJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryJTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(ssnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchJButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(emailJLabel)
                                .addGap(23, 23, 23)
                                .addComponent(emailJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phoneJLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fNameJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fnameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lNameJLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lnameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(ssnJLabel)
                                .addGap(18, 18, 18)
                                .addComponent(ssnJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(wPhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(birthDateJLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(salaryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addDetailsJButton)
                                    .addComponent(birthdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addressJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(salaryJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(applyJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(employeeComboJLabel)
                        .addGap(18, 18, 18)
                        .addComponent(employeeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ssnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameJLabel)
                    .addComponent(fnameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNameJLabel)
                    .addComponent(lnameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnJLabel)
                    .addComponent(ssnJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wPhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneJLabel)
                    .addComponent(emailJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailJLabel)
                    .addComponent(birthDateJLabel)
                    .addComponent(birthdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addressJLabel)
                        .addComponent(jScrollPane2)
                        .addComponent(addDetailsJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(salaryJLabel)
                        .addComponent(salaryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeComboJLabel)
                    .addComponent(employeeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(applyJButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void wPhoneJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wPhoneJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wPhoneJTextFieldActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        String searchKey = ssnJTextField.getText().trim();
        if(!searchKey.isEmpty() && validateSSN(searchKey)){
            Person newPerson = personDirectory.searchPerson(searchKey);
            if(newPerson == null){
                JOptionPane.showMessageDialog(phoneJLabel, "Person Record Does Not Exists.");
                int response =JOptionPane.showConfirmDialog(phoneJLabel, "Do you want to add person details now?");
                if(response == JOptionPane.YES_OPTION){
                    hideFields(Boolean.TRUE);
                    applyJButton.setVisible(true);
                   
                }
                else{
                    hideFields(Boolean.FALSE);
                }
            }
            else{
                JOptionPane.showMessageDialog(phoneJLabel, "Person Records Found");
                hideFields(Boolean.TRUE);
                fillDetails(newPerson);
                addDetailsJButton.setVisible(false);
                applyJButton.setVisible(true);
                employeeComboJLabel.setVisible(true);
                employeeJComboBox.setVisible(true);
                populateEmployeeCombo();
                targetPerson = newPerson;
            }
        }
        else{
            JOptionPane.showMessageDialog(phoneJLabel, "Please Enter a Valid SSN");
        }
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void addDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDetailsJButtonActionPerformed
        String firstName = fnameJTextField.getText().trim();
        String lastName = lnameJTextField.getText().trim();
        String SSN = ssnJTextField1.getText();
        String email = emailJTextField.getText();
        String workPhone = wPhoneJTextField.getText().trim();
        DateFormat df = new SimpleDateFormat("MM/DD/YYYY");
        Date birthdate = new Date();
        String address = addressTextArea.getText().trim();
        String salaryString = salaryJTextField.getText().trim();
        int salary=0;
        
        if(validateName(firstName) && validateName(lastName)){
            if(validateSSN(SSN) && !personDirectory.getPersonList().containsKey(SSN)){
                if(validateEmail(email)){
                    if(validatePhone(workPhone)){
                        try{
                                salary = Integer.parseInt(salaryString);
                                birthdate = new Date(birthdateTextField.getText());
                                
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(birthdateTextField, "Please Enter Valid Date");
                            birthdateTextField.setText("");
                            salaryJTextField.setText("");
                        }
                        if(!address.isEmpty()){
                            Person newPerson = new Person();
                            
                            newPerson.setEmail(email);
                            newPerson.setFirstName(firstName);
                            newPerson.setLastName(lastName);
                            newPerson.setSSN(SSN);
                            newPerson.setBirthdate(birthdate);
                            newPerson.setAddress(address);
                            newPerson.setPhoneNum(workPhone);
                            newPerson.setMonthlyIncome(salary);
                            personDirectory.addPerson(newPerson);    //Add person for future records
                            JOptionPane.showMessageDialog(null, "Records for "+ newPerson.getFirstName() + " are added!");
                            resetFields();
                            hideFields(Boolean.FALSE);
                            employeeComboJLabel.setVisible(true);
                            employeeJComboBox.setVisible(true);
                            populateEmployeeCombo();
                            targetPerson = newPerson;
                            sendEmail(email);
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Please Enter Valid Address");
                            addressTextArea.setText("");
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Please Enter 10 digit Phone Number");
                        wPhoneJTextField.setText("");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Please Enter Valid Email");
                    emailJTextField.setText("");
                }
            }
            else{
               JOptionPane.showMessageDialog(null, "Please Enter Valid SSN"); 
               ssnJTextField.setText("");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Enter Valid Names");
            fnameJTextField.setText("");
            lnameJTextField.setText("");
        }
    }//GEN-LAST:event_addDetailsJButtonActionPerformed

    private void applyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyJButtonActionPerformed
        targetUser = (UserAccount) employeeJComboBox.getSelectedItem();
        LicenseWorkRequest workRequest = new LicenseWorkRequest();
        if(targetPerson!=null){
            workRequest.setHolder(targetPerson);
            workRequest.setMessage("New Application. Check for Crime Records");
            workRequest.setReceiver(targetUser);
            workRequest.setSender(user);
            workRequest.setStatus("Newly Assigned");
            targetUser.getInQueue().addWorkRequest(workRequest);
            user.getOutQueue().addWorkRequest(workRequest);
            JOptionPane.showMessageDialog(applyJButton, "Request Sent Successfully");
            resetFields();
            hideFields(Boolean.FALSE);
        }
    }//GEN-LAST:event_applyJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void salaryJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryJTextFieldActionPerformed

    public void populateEmployeeCombo(){
        RecordOrganization organization= null;
        for(Integer orgnizationKeys : enterprise.getOrganizationDirectory().getOrganizationDirectory().keySet()){
            Organization org = enterprise.getOrganizationDirectory().getOrganizationDirectory().get(orgnizationKeys);
            if(org instanceof RecordOrganization){
                organization = (RecordOrganization) org; 
                break;
            }
        }
        if(organization != null){
            employeeJComboBox.removeAllItems();
            for(String userKeys : organization.getUserAccountDirectory().getUserAccountDirectory().keySet()){
                UserAccount user =organization.getUserAccountDirectory().getUserAccountDirectory().get(userKeys);
                employeeJComboBox.addItem(user);
            }
            targetOrg = organization;
        }
    }
    
    public void resetFields(){
        fnameJTextField.setText("");
        lnameJTextField.setText("");
        ssnJTextField.setText("");
        emailJTextField.setText("");
        wPhoneJTextField.setText("");
        addressTextArea.setText("");
        birthdateTextField.setText("");
        salaryJTextField.setText("");
    }
    
    public static boolean validateSSN(String SSN)
    {
        return SSN.matches("^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$");
    } 
    
    public static boolean validateName( String firstName )
    {
      return firstName.matches( "[A-Z][a-zA-Z]*" );
    }
    
    public static boolean validatePhone(String phoneNum)
    {
        if(phoneNum.matches("\\d{10}"))
            return true;
        else if(phoneNum.matches("\\d{3}[-\\.\\s]\\d{3}[-\\.\\s]\\d{4}"))
            return true;
        else
            return false;
        
    }   
    
    public static boolean validateEmail(String email)
    {
        return email.matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDetailsJButton;
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JButton applyJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel birthDateJLabel;
    private javax.swing.JTextField birthdateTextField;
    private javax.swing.JLabel emailJLabel;
    private javax.swing.JTextField emailJTextField;
    private javax.swing.JLabel employeeComboJLabel;
    private javax.swing.JComboBox employeeJComboBox;
    private javax.swing.JLabel fNameJLabel;
    private javax.swing.JTextField fnameJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lNameJLabel;
    private javax.swing.JTextField lnameJTextField;
    private javax.swing.JLabel phoneJLabel;
    private javax.swing.JLabel salaryJLabel;
    private javax.swing.JTextField salaryJTextField;
    private javax.swing.JButton searchJButton;
    private javax.swing.JLabel ssnJLabel;
    private javax.swing.JTextField ssnJTextField;
    private javax.swing.JTextField ssnJTextField1;
    private javax.swing.JTextField wPhoneJTextField;
    // End of variables declaration//GEN-END:variables

    public void sendEmail(String recepient){
        try{
            String from = "safetymeter@mail.com";
            String userName = "safetymeter@mail.com";
            String password = "@dmin@123";
            
            
            String to = recepient;
        
            Properties prop = System.getProperties();
            prop.put("mail.smtp.port", "587" );
            prop.put("mail.smtp.auth", "true");
            prop.put("mail.smtp.starttls.enable", "true");
            prop.put("mail.smtp.ssl.enable", "true");
            //prop.put("mail.smtp.auth", "true");
            prop.put("mail.smtp.host","smtp.mail.com");
            //JOptionPane.showMessageDialog(null, "configure done");
            //prop.put("mail.smtp.user",userName);
            //prop.put("mail.smtp.password",password);
            
            //prop.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");
            //prop.put("mail.smtp.socketFactory.port","587" );  
            //prop.put("mail.smtp.socketFactory.fallback", "false");
            
            //prop.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory" );
            //prop.put("mail.smtp.socketFactory.port","587" );  
            //prop.put("mail.smtp.socketFactory.fallback","false" );
        
        
            Session session = Session.getDefaultInstance(prop, new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication(){
                   return new PasswordAuthentication(userName, password);
                }
            });
            //Session session = Session.getDefaultInstance(prop);
            session.setDebug(true);
            Message message = new MimeMessage(session);
            
            
            
            message.setFrom(new InternetAddress(from));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            message.setSubject("Welcome to Safety Meter");
            String messageBody;
            messageBody = " Your profile on safety meter is now created. Your request for firearms license is being processed. Please be"
                    + "patient. This process usually takes 2-3 busniess days."
                    + "-Team Safety Meter";
            message.setText(messageBody);
            message.setSentDate(new Date());
            //JOptionPane.showMessageDialog(null, "Getting SMTP Servers");
            
            Transport transport = session.getTransport("smtp");
            transport.connect("smtp.mail.com", userName, password);
            transport.send(message);
            transport.close();
            
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
}
