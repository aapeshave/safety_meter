/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.supervisior;

import business.organization.Organization;
import business.organization.SuperVisionOrganization;
import business.schedule.Schedule;
import business.schedule.TimeInterval;
import business.userAccount.UserAccount;
import com.sun.xml.internal.ws.developer.JAXWSProperties;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajinkya
 */
public class PatrollingScheduleJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Schedule schedule;
    private Organization organization;
    private UserAccount user;
    /**
     * Creates new form PatrollingScheduleJPanel
     * @param UserProcessContainer
     * @param currentSchedule
     * @param organization
     */
    public PatrollingScheduleJPanel(JPanel userProcessContainer, Schedule currentSchedule, Organization organization,UserAccount user) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.schedule = currentSchedule;
        this.organization = organization;
        this.user = user;
        showFields(Boolean.FALSE);
        if(organization instanceof SuperVisionOrganization){
            addTimeIntervalJButton.setVisible(true);
            assignScheduleJButton.setVisible(false);
        }
        else{
            addTimeIntervalJButton.setVisible(false);
            assignScheduleJButton.setVisible(true);
        }
            
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patrollingScheduleJTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        addTimeIntervalJButton = new javax.swing.JButton();
        startTimeTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        endTimeTextField = new javax.swing.JTextField();
        addJButton = new javax.swing.JButton();
        assignScheduleJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 254, 242));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel1.setText("Current Patrolling Schedule");

        patrollingScheduleJTable.setBackground(new java.awt.Color(237, 238, 225));
        patrollingScheduleJTable.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        patrollingScheduleJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Schedule ID", "Officer", "Start Time", "End Time", "Finsihed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patrollingScheduleJTable);

        addTimeIntervalJButton.setBackground(new java.awt.Color(237, 238, 225));
        addTimeIntervalJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        addTimeIntervalJButton.setText("Add Time Interval");
        addTimeIntervalJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTimeIntervalJButtonActionPerformed(evt);
            }
        });

        startTimeTextField.setBackground(new java.awt.Color(237, 238, 225));
        startTimeTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel2.setText("Start Time");

        jLabel3.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel3.setText("End Time");

        endTimeTextField.setBackground(new java.awt.Color(237, 238, 225));
        endTimeTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        addJButton.setBackground(new java.awt.Color(237, 238, 225));
        addJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        assignScheduleJButton.setText("Assign to me");
        assignScheduleJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignScheduleJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(237, 238, 225));
        backJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addTimeIntervalJButton)
                            .addComponent(backJButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(endTimeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(startTimeTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(assignScheduleJButton)
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTimeIntervalJButton)
                    .addComponent(startTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(addJButton)
                    .addComponent(assignScheduleJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(endTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addTimeIntervalJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTimeIntervalJButtonActionPerformed
        showFields(Boolean.TRUE);
    }//GEN-LAST:event_addTimeIntervalJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        String startTime = startTimeTextField.getText().trim();
        String endTime = endTimeTextField.getText().trim();
        try{
           TimeInterval interval = new TimeInterval(); 
           interval.setStartTime(Integer.parseInt(startTime));
           interval.setEndTime(Integer.parseInt(endTime));
           interval.setDoneShift(0);
           schedule.addSchedule(interval);
           JOptionPane.showMessageDialog(addJButton, "Schedule is Updated");
           populateTable();
            showFields(Boolean.FALSE);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(addJButton, "Please Enter Numerical Time");
        }
        
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void assignScheduleJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignScheduleJButtonActionPerformed
        int selectedSchedule = patrollingScheduleJTable.getSelectedRow();
        if(selectedSchedule>=0){
            TimeInterval newInterval = (TimeInterval) patrollingScheduleJTable.getValueAt(selectedSchedule, 0);
            newInterval.setPatrollingOfficer(user);
            JOptionPane.showMessageDialog(patrollingScheduleJTable, "Successfully Assigned Schedule");
            populateTable();
        }
        else{
            JOptionPane.showMessageDialog(patrollingScheduleJTable, "Please select a row from table");
        }
    }//GEN-LAST:event_assignScheduleJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton addTimeIntervalJButton;
    private javax.swing.JButton assignScheduleJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField endTimeTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable patrollingScheduleJTable;
    private javax.swing.JTextField startTimeTextField;
    // End of variables declaration//GEN-END:variables

    private void showFields(Boolean value) {
        addJButton.setVisible(value);
        startTimeTextField.setVisible(value);
        endTimeTextField.setVisible(value);
        jLabel2.setVisible(value);
        jLabel3.setVisible(value);
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) patrollingScheduleJTable.getModel();
        model.setRowCount(0);
        
        for(Integer scheduleKeys : schedule.getPatrollingSchedule().keySet()){
            TimeInterval interval = schedule.getPatrollingSchedule().get(scheduleKeys);
            Object[] row = new Object[5];
            row[0] = interval;
            if(interval.getPatrollingOfficer() == null){
                row[1] = "Not Assigned";
            }
            else{
                row[1] = interval.getPatrollingOfficer().getEmployee();
            }
            row[2] = interval.getStartTime();
            row[3] = interval.getEndTime();
            if(interval.getDoneShift()==0){
                row[4] = "NO";
            }
            else
                row[4] = "YES";
            model.addRow(row);
        }
    }
}
