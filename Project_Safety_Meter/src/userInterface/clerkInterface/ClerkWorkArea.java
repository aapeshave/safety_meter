/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.clerkInterface;

import business.crime.CrimeIncident;
import business.crime.CrimeRecord;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.person.Person;
import business.person.PersonDirectory;
import business.userAccount.UserAccount;
import business.workQueue.InvestigationWorkRequest;
import business.workQueue.LicenseWorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import sun.lwawt.macosx.CImage;
import userInterface.adminRole.ManageOrganizationJPanel;

/**
 *
 * @author ajinkya
 */
public class ClerkWorkArea extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private PersonDirectory personDirectory;
    private CrimeRecord crimeRecords;
    private Person targetPerson;
    private Enterprise enterprise;
    private Person person;
    /**
     * Creates new form ClerkWorkArea
     */
   

    public ClerkWorkArea(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network ) {
         initComponents();
         //JOptionPane.showMessageDialog(this, account.getEmployee().getPerson());
         clerkNameJLabel.setText("Welcome "+account.getEmployee().getPerson().toString());
         this.userProcessContainer = userProcessContainer;
         this.account = account;
         this.organization = organization;
         this.personDirectory = network.getPersonDirectory();
         this.crimeRecords = network.getCrimeRecords();
         this.enterprise = enterprise;
         this.person = account.getEmployee().getPerson();
         inQueueJTable.setVisible(false);
         //jScrollPane1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addCrimeButton = new javax.swing.JButton();
        searchCriminalJButton = new javax.swing.JButton();
        viewRecordJButton = new javax.swing.JButton();
        clerkNameJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inQueueJTable = new javax.swing.JTable();
        showInQueueButton = new javax.swing.JButton();
        proceedJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 254, 242));

        addCrimeButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        addCrimeButton.setText("Add a Crime");
        addCrimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCrimeButtonActionPerformed(evt);
            }
        });

        searchCriminalJButton.setBackground(new java.awt.Color(237, 238, 225));
        searchCriminalJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        searchCriminalJButton.setText("Search Criminal Records");
        searchCriminalJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCriminalJButtonActionPerformed(evt);
            }
        });

        viewRecordJButton.setBackground(new java.awt.Color(237, 238, 225));
        viewRecordJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        viewRecordJButton.setText("View Crime Report");
        viewRecordJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordJButtonActionPerformed(evt);
            }
        });

        clerkNameJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        clerkNameJLabel.setText("Name of Clerk");

        inQueueJTable.setBackground(new java.awt.Color(237, 238, 225));
        inQueueJTable.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        inQueueJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Date", "Sender", "Person", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(inQueueJTable);

        showInQueueButton.setBackground(new java.awt.Color(237, 238, 225));
        showInQueueButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        showInQueueButton.setText("Show Incoming Requests");
        showInQueueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showInQueueButtonActionPerformed(evt);
            }
        });

        proceedJButton.setBackground(new java.awt.Color(237, 238, 225));
        proceedJButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        proceedJButton.setText("Proceed to Authority");
        proceedJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clerkNameJLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addCrimeButton)
                                .addGap(18, 18, 18)
                                .addComponent(searchCriminalJButton)
                                .addGap(18, 18, 18)
                                .addComponent(viewRecordJButton)
                                .addGap(18, 18, 18)
                                .addComponent(showInQueueButton))
                            .addComponent(proceedJButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(clerkNameJLabel)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCrimeButton)
                    .addComponent(searchCriminalJButton)
                    .addComponent(viewRecordJButton)
                    .addComponent(showInQueueButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(proceedJButton)
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addCrimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCrimeButtonActionPerformed
        // TODO add your handling code here:
        CrimeAddPanel manageOrganizationJPanel = new CrimeAddPanel(userProcessContainer, crimeRecords, account, person);
        userProcessContainer.add(manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addCrimeButtonActionPerformed

    private void viewRecordJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordJButtonActionPerformed
        // TODO add your handling code here:
        
        CrimeReportJPanel crimeReportJPanel = new CrimeReportJPanel(userProcessContainer, crimeRecords, account);
        userProcessContainer.add(crimeReportJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewRecordJButtonActionPerformed

    private void showInQueueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showInQueueButtonActionPerformed
        // TODO add your handling code here:
        jScrollPane1.setVisible(true);
        inQueueJTable.setVisible(true);
        JOptionPane.showMessageDialog(jScrollPane1, "showing quque");
        populateTable();
        
    }//GEN-LAST:event_showInQueueButtonActionPerformed

    private void searchCriminalJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCriminalJButtonActionPerformed
        // TODO add your handling code here:
        int result = inQueueJTable.getSelectedRow();
        if(result < 0){
            JOptionPane.showMessageDialog(jScrollPane1, "Please Select a Row From Table.");
        }
        else{
            Person selectedPerson = (Person) inQueueJTable.getValueAt(result, 2);
            targetPerson = selectedPerson;
            JOptionPane.showMessageDialog(jScrollPane1, "Searching records for "+selectedPerson.getSSN());
            CrimeRecord personRecord = crimeRecords.searchPersonRecord(selectedPerson.getSSN());
            if(personRecord == null){
                JOptionPane.showMessageDialog(jScrollPane1, "There are no records for that person");
            }
            else{
                for(Integer crimeKeys : personRecord.getCrimeRecord().keySet()){
                    CrimeIncident crime = personRecord.getCrimeRecord().get(crimeKeys);
                    //JOptionPane.showMessageDialog(jScrollPane1, crime);
                }
                int numberOfCrimes = personRecord.getCrimeRecord().values().size();
                int option = JOptionPane.showConfirmDialog(jScrollPane1, numberOfCrimes +" Crime Record(s) found. Press yes to view records.");
                if(option==0){
                    //Create New Panel and show Commited Crime
                }
            }
        }
    }//GEN-LAST:event_searchCriminalJButtonActionPerformed

    private void proceedJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedJButtonActionPerformed
        int result = inQueueJTable.getSelectedRow();
        if(result < 0){
            JOptionPane.showMessageDialog(jScrollPane1, "Please Select a Row From Table.");
        }
        else{
            LicenseWorkRequest request = (LicenseWorkRequest) inQueueJTable.getValueAt(result, 4);
            ProceedAuthorityJPanel crimeReportJPanel = new ProceedAuthorityJPanel(userProcessContainer, targetPerson, account,enterprise, request);
            userProcessContainer.add(crimeReportJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }      
    }//GEN-LAST:event_proceedJButtonActionPerformed
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) inQueueJTable.getModel();
        model.setRowCount(0);
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
        
        for(Integer queueKeys : account.getInQueue().getWorkRequstList().keySet()){
            LicenseWorkRequest request = (LicenseWorkRequest) account.getInQueue().getWorkRequstList().get(queueKeys);
            Object row[] = new Object[5];
            row[0] = df.format(request.getRequestDate());
            row[1] = request.getSender().getEmployee();
            row[2] = request.getHolder();
            row[3] = request.getMessage();
            row[4] = request;
            model.addRow(row);
        }    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCrimeButton;
    private javax.swing.JLabel clerkNameJLabel;
    private javax.swing.JTable inQueueJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton proceedJButton;
    private javax.swing.JButton searchCriminalJButton;
    private javax.swing.JButton showInQueueButton;
    private javax.swing.JButton viewRecordJButton;
    // End of variables declaration//GEN-END:variables
}
