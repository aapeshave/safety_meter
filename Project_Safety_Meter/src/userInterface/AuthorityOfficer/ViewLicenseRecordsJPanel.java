/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.AuthorityOfficer;

import business.license.FireArmLicense;
import business.license.LicenseDirectory;
import business.person.PersonDirectory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ajinkya
 */
public class ViewLicenseRecordsJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private LicenseDirectory licenseDirectory;
    private PersonDirectory personDirectory;
    /**
     * Creates new form ViewLicenseRecordsJPanel
     */
    public ViewLicenseRecordsJPanel(JPanel userProcessContainer, LicenseDirectory licenses, PersonDirectory personDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.licenseDirectory = licenses;
        this.personDirectory = personDirectory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        licenseViewJTable = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 254, 242));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("License Holder In Our Network");

        licenseViewJTable.setBackground(new java.awt.Color(237, 238, 225));
        licenseViewJTable.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        licenseViewJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Valid From", "Valid Through", "Holder Name", "License Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(licenseViewJTable);

        backjButton.setBackground(new java.awt.Color(237, 238, 225));
        backjButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        backjButton.setText("<< Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backjButton)
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable licenseViewJTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) licenseViewJTable.getModel();
       
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(licenseViewJTable.getModel());
        licenseViewJTable.setRowSorter(sorter);

        //DateFormat simpleDate = new SimpleDateFormat("MM/DD/YYYY");
        model.setRowCount(0);
        for(Integer licenseKeys : licenseDirectory.getLicenseList().keySet()){
            FireArmLicense license = licenseDirectory.getLicenseList().get(licenseKeys);
            Object[] row = new Object[5];
            row[0] = license;
            row[1] = license.getValidFrom();
            row[2] = license.getValidTill();
            row[3] = license.getAssignedTo();
            row[4] = license.getType();
            personDirectory.getPersonList().get(license.getAssignedTo().getSSN()).setDoesHaveLicense(1);
            
            model.addRow(row);
        }
    }
}
