/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.DB4OUtil.DB4OUtil;
import business.EcoSystem;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.userAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ajinkya
 */
public class MainJFrame extends javax.swing.JFrame {
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        setSize(800,500);
        setTitle("Safety Meter");
        system = dB4OUtil.retrieveSystem();
        logOutButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        logInButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 254, 242));

        jLabel1.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel1.setText("UserName");

        jLabel2.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel2.setText("Password");

        usernameTextField.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        logInButton.setBackground(new java.awt.Color(237, 238, 225));
        logInButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        logInButton.setText("LOG IN");
        logInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInButtonActionPerformed(evt);
            }
        });

        logOutButton.setBackground(new java.awt.Color(237, 238, 225));
        logOutButton.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        logOutButton.setText("LOG OUT");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
            .addComponent(logInButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameTextField)
                    .addComponent(passwordField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logInButton)
                .addGap(18, 18, 18)
                .addComponent(logOutButton)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        userProcessContainer.setBackground(new java.awt.Color(255, 254, 242));
        userProcessContainer.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(userProcessContainer);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInButtonActionPerformed
        // TODO add your handling code here:
        try{
            String userName = usernameTextField.getText().trim();
            char[] passwordCharArray = passwordField.getPassword();
            String password = String.valueOf(passwordCharArray).trim();
           
            if(!userName.isEmpty() && !password.isEmpty()){
                UserAccount user = system.getUserAccountDirectory().authenticateUser(userName, password);
                Enterprise inEnterprise = null;
                Organization inOrganization = null;
                Network inNetwork = null;
                if(user == null){
                    
                    for(String networkKeys : system.getNetworkList().keySet()){
                        Network currentNetwork  = system.getNetworkList().get(networkKeys);
                       for(Integer enterpriseKeys : currentNetwork.getEnterpriseDirectory().getEnterpriseList().keySet()){
                           Enterprise currentEnterprise = currentNetwork.getEnterpriseDirectory().getEnterpriseList().get(enterpriseKeys);
                           user = currentEnterprise.getUserAccountDirectory().authenticateUser(userName, password);
                           
                           if(user == null){
                               for(Integer organizationKeys : currentEnterprise.getOrganizationDirectory().getOrganizationDirectory().keySet()){
                                   Organization currentOrganization = currentEnterprise.getOrganizationDirectory().getOrganizationDirectory().get(organizationKeys);
                                   user = currentOrganization.getUserAccountDirectory().authenticateUser(userName, password);
                                   if (user != null) {
                                        inEnterprise = currentEnterprise;
                                        inOrganization = currentOrganization;
                                        inNetwork = currentNetwork;
                                        
                                        break;
                                    }
                                }   
                            
                           }
                           else{
                               inEnterprise = currentEnterprise;
                               inNetwork = currentNetwork;
                               break;
                           }
                           if (inOrganization != null){
                             break;
                           }
                       } 
                       if (inEnterprise != null) {
                            break;
                        }
                    }
                    
                }
                if(user == null){
                    for(String networkKeys : system.getNetworkList().keySet()){
                        Network currentNetwork = system.getNetworkList().get(networkKeys);
                        for(String personKeys : currentNetwork.getPersonDirectory().getPersonList().keySet()){
                            
                            if(currentNetwork.getPersonDirectory().getPersonList().get(personKeys).getUserAccount().getUsername()!= null){
                               if(currentNetwork.getPersonDirectory().getPersonList().get(personKeys).getUserAccount().getUsername().equals(userName)){
                                    if(currentNetwork.getPersonDirectory().getPersonList().get(personKeys).getUserAccount().getPassword().equals(password)){
                                        user =  currentNetwork.getPersonDirectory().getPersonList().get(personKeys).getUserAccount();
                                        inOrganization = null;
                                        inEnterprise= null; 
                                        
                                        inNetwork =  currentNetwork;
                                        break;
                                    }
                                } 
                            }
                                
                        }
                    }
                }
                if(user==null){
                   
                    
                    JOptionPane.showMessageDialog(rootPane, "Invalid Credentials");
                    resetFields();
                    
                }
                else{
                    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                    
                    userProcessContainer.add("workArea", user.getRole().createWorkArea(userProcessContainer, user, inOrganization,  inEnterprise,inNetwork ,system));
                    layout.next(userProcessContainer);
                    resetFields();
                    logInButton.setEnabled(false);
                    logOutButton.setEnabled(true);
                    usernameTextField.setEnabled(false);
                    passwordField.setEnabled(false);
                }
                
                
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Please Fill Username & Password Fields");
                resetFields();
            }
            
              
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(rootPane, e);
            e.printStackTrace();
        } 
    }//GEN-LAST:event_logInButtonActionPerformed

    public void resetFields(){
        usernameTextField.setText("");
        passwordField.setText("");
    }
    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        logOutButton.setEnabled(false);
        logInButton.setEnabled(true);
        usernameTextField.setEnabled(true);
        passwordField.setEnabled(true);
        
        
        userProcessContainer.removeAll();
        JPanel blankJP = new JPanel();
        userProcessContainer.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
        JOptionPane.showMessageDialog(rootPane, "You have been successfully logged out");
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_logOutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton logInButton;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPanel userProcessContainer;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
